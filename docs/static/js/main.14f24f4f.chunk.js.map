{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","action","onSubmit","e","preventDefault","trim","length","category","className","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GidGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","GifGrid","ReactDOM","render","document","getElementById"],"mappings":"yLAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,0BAAMC,OAAO,GAAGC,SAVG,SAACC,GACpBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC7BT,GAAc,SAACU,GAAD,OAAeR,GAAf,mBAA8BQ,OAC5CP,EAAc,OAMd,2BACEQ,UAAU,MACVC,KAAK,OACLC,MAAOX,EACPY,SAnBoB,SAACR,GACzBH,EAAcG,EAAES,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DAEfC,EAFe,iDAEiCC,UACpDT,GAHmB,+DAKFU,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAgBdM,GAhBc,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKP,UAAU,8CACb,yBAAKqB,IAAKd,EAAKe,IAAKL,IACpB,uBAAGjB,UAAU,QAAb,IAAsBiB,EAAtB,OCoBSM,EAtBC,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECGN,SAACA,GAAc,IAAD,EACdT,mBAAS,CACjCsB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACRtB,EAAQN,GAAU6B,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPd,KAAMiB,EACNL,SAAS,MAEV,UAEJ,CAACzB,IAEG0B,EDnB2BM,CAAahC,GAAjCmB,EADkB,EACxBN,KAAcY,EADU,EACVA,QAEtB,OACE,oCACE,wBAAIxB,UAAU,iDACXD,GAAsB,cAExByB,GACC,uBAAGxB,UAAU,8EAAb,eAIF,yBAAKA,UAAU,aACZkB,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEazBkB,EA5BM,WAAO,IAAD,EACW3C,mBAAS,CAAC,KADrB,mBAClB4C,EADkB,KACN7C,EADM,KAGzB,OACE,oCACE,yBAAKW,UAAU,YACb,wBAAIA,UAAU,mDAAd,cAGA,yBAAKA,UAAU,UACb,wBAAIA,UAAU,kDAAd,eAKJ,uBAAGA,UAAU,aAAb,+BACA,kBAAC,EAAD,CAAaX,cAAeA,IAC5B,6BAEA,4BACG6C,EAAWpB,KAAI,SAACf,GAAD,OACd,kBAACoC,EAAD,CAASpC,SAAUA,EAAUiC,IAAKjC,U,MClB5CqC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.14f24f4f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const HandleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const HandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((category) => [inputValue, ...category]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form action=\"\" onSubmit={HandleSubmit}>\r\n      <input\r\n        className=\"inp\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={HandleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  // Peticion HTTP\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=20&api_key=OF137jjMuBEVVv8YeM5vsHU5I88v7hY5`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url, //Pregunta si images === true\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInLeft\">\r\n      <img src={url} alt={title} />\r\n      <p className=\"some\"> {title} </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nconst GidGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"textCat animate__animated animate__fadeInDown\">\r\n        {category ? category : \"Busca Gifs\"}\r\n      </h3>\r\n      {loading && (\r\n        <p className=\"loading animate__animated animate__bounceIn animate__flash animate__slower\">\r\n          Cargando...\r\n        </p>\r\n      )}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GidGrid;\r\n","// CustomHook son funciones que ayudan con funcionalidades\r\n// Y pueden tener su propio estado\r\n// funcionan como un functional components\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../components/helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 500);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"\"]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"divTitle\">\r\n        <h2 className=\"app-title animate__animated animate__backInLeft\">\r\n          Gif-App...\r\n        </h2>\r\n        <div className=\"divSub\">\r\n          <h3 className=\"app-sub animate__animated animate__backInRight\">\r\n            By mrLuis\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <p className=\"searchTxt\">Busca tus gifs favoritos...</p>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid category={category} key={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport GifExpertApp from \"./GifExpertApp\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}